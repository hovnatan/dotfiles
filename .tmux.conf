set-option -g default-shell "/bin/zsh"
# set-option -g default-command "exec /bin/zsh"
set-option -g default-terminal "tmux-256color"
set -as terminal-features ",$TERM*:RGB"
set-option -g history-limit 100000
set-option -g prefix C-a
set-option -g focus-events on
set-option -g history-file ~/.local/share/tmux_history
set-option -g xterm-keys on
set-option -sg escape-time 10

unbind C-b
bind-key C-a send-prefix
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"
bind-key k clear-history \; send-keys C-l
set-option -g mode-keys vi
bind-key -T copy-mode-vi "v" send -X begin-selection
bind-key -T copy-mode-vi "V" send -X select-line
bind-key -T copy-mode-vi "r" send -X rectangle-toggle
bind-key -T copy-mode-vi "Y" send-keys -X copy-pipe-and-cancel "tmux paste-buffer"
bind-key -T copy-mode-vi "y" send-keys -X copy-selection
set-option -g -q mouse on
bind-key -n WheelUpPane if-shell -F "#{alternate_on}" "send-keys -M" "select-pane -t= \; copy-mode -eu"
bind-key -n WheelDownPane select-pane -t= \; send-keys -M
bind-key / copy-mode \; command-prompt -p "(search up)" "send -X search-backward \"%%%\""
bind-key c command-prompt -p "Enter session name:" "new-session -s '%%'"

bind-key h select-pane -U
bind-key j select-pane -L
bind-key k select-pane -R
bind-key l select-pane -D
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
unbind-key '"'
unbind-key %
bind-key -n M-q confirm-before -p "kill-pane #P? (y/n)" kill-pane

unbind-key -T root M-MouseDown3Pane
unbind-key -T root MouseDown3Pane

bind-key -n C-u if-shell -F "#{alternate_on}" "send-keys C-u" "copy-mode -eu"

set -g exit-empty off

set-option -g status off
set-option -g set-titles on
set-option -g automatic-rename on
set-option -g allow-rename on

set-option -g set-titles-string "[#{=2:session_name}]#{pane_title}"
# et-option -g set-titles-string "t###{pane_title}"
# set-option -g status-position top
# set-option -g status-interval 2
# set-option -g status-justify left
# bind-key c command-prompt -p "window name:" "new-window -c '#{pane_current_path}' -n '%%'"
# bind-key -n M-j previous-window
# bind-key -n M-k next-window
# bind-key -n M-J swap-window -d -t -1
# bind-key -n M-K swap-window -d -t +1
# set-option -g renumber-windows on
# bind-key C-s last-window
